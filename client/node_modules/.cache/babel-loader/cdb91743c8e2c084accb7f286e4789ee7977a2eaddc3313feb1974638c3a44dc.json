{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivana\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\Corp\\\\client\\\\src\\\\view\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport './Chat.css';\nimport React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport Menu from \"../../components/Menu/Menu\";\nimport { chat } from '../../http/communicationApi';\nimport { useLoaderData, useParams } from 'react-router-dom';\nimport { CommunicationContext } from '../../providers/CommunicationProvider';\nimport { SERVER_API } from '../../utils/consts';\nimport { UserContext } from '../../providers/UserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = _s(observer(_c = _s(() => {\n  var _communicationStore$c, _communicationStore$c2;\n  _s();\n  const {\n    communicationStore\n  } = useContext(CommunicationContext);\n  const {\n    userStore\n  } = useContext(UserContext);\n  const chatData = useLoaderData();\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function getChats() {\n      communicationStore.setChat(chatData);\n    }\n    getChats();\n    return () => {\n      communicationStore.setChat([]);\n    };\n  }, [communicationStore, chatData, id]);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const result = await chat(id);\n        communicationStore.setChat(result);\n        console.log(communicationStore.chat);\n      } catch (error) {\n        console.log(error);\n      }\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n      communicationStore.setChat([]);\n    };\n  }, [communicationStore, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat__header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat__header--title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat__header--nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"chat__header--photo\",\n              src: SERVER_API + (communicationStore === null || communicationStore === void 0 ? void 0 : (_communicationStore$c = communicationStore.chat) === null || _communicationStore$c === void 0 ? void 0 : (_communicationStore$c2 = _communicationStore$c.companionData) === null || _communicationStore$c2 === void 0 ? void 0 : _communicationStore$c2.photo),\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat__content\",\n            children: communicationStore.chat && communicationStore.chat.map((value, key) => {\n              var _userStore$userData, _value$user, _value$user2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: (userStore === null || userStore === void 0 ? void 0 : (_userStore$userData = userStore.userData) === null || _userStore$userData === void 0 ? void 0 : _userStore$userData.nickname) !== communicationStore.chat.companionData.nickname ? \"message\" : \"message me\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message__data\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message__data--title\",\n                    children: (value === null || value === void 0 ? void 0 : (_value$user = value.user) === null || _value$user === void 0 ? void 0 : _value$user.firstname) + ' ' + (value === null || value === void 0 ? void 0 : (_value$user2 = value.user) === null || _value$user2 === void 0 ? void 0 : _value$user2.lastname)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message__data--time\",\n                    children: value === null || value === void 0 ? void 0 : value.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message__title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), value.content, value.file]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat__input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat__input--attach\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"chat__input--message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chat__input--send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}, \"/jXl3SLlH9DeRj2JDhTL0MnVKQg=\", false, function () {\n  return [useLoaderData, useParams];\n})), \"/jXl3SLlH9DeRj2JDhTL0MnVKQg=\", false, function () {\n  return [useLoaderData, useParams];\n});\n_c2 = Chat;\nexport const ChatLoader = async ({\n  params\n}) => {\n  var _res$response, _res$response2;\n  const res = await chat(params.id);\n  if ((res === null || res === void 0 ? void 0 : (_res$response = res.response) === null || _res$response === void 0 ? void 0 : _res$response.status) === 400 || (res === null || res === void 0 ? void 0 : (_res$response2 = res.response) === null || _res$response2 === void 0 ? void 0 : _res$response2.status) === 401) {\n    var _res$response3, _res$response3$data, _res$response4;\n    throw new Response(res === null || res === void 0 ? void 0 : (_res$response3 = res.response) === null || _res$response3 === void 0 ? void 0 : (_res$response3$data = _res$response3.data) === null || _res$response3$data === void 0 ? void 0 : _res$response3$data.message, {\n      status: res === null || res === void 0 ? void 0 : (_res$response4 = res.response) === null || _res$response4 === void 0 ? void 0 : _res$response4.status\n    });\n  }\n  return res;\n};\n_c3 = ChatLoader;\nexport default Chat;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Chat$observer\");\n$RefreshReg$(_c2, \"Chat\");\n$RefreshReg$(_c3, \"ChatLoader\");","map":{"version":3,"names":["React","useContext","useEffect","observer","Menu","chat","useLoaderData","useParams","CommunicationContext","SERVER_API","UserContext","jsxDEV","_jsxDEV","Chat","_s","_c","_communicationStore$c","_communicationStore$c2","communicationStore","userStore","chatData","id","getChats","setChat","interval","setInterval","result","console","log","error","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","companionData","photo","alt","map","value","key","_userStore$userData","_value$user","_value$user2","userData","nickname","user","firstname","lastname","time","content","file","type","_c2","ChatLoader","params","_res$response","_res$response2","res","response","status","_res$response3","_res$response3$data","_res$response4","Response","data","message","_c3","$RefreshReg$"],"sources":["C:/Users/ivana/OneDrive/Документы/Corp/client/src/view/Chat/Chat.jsx"],"sourcesContent":["import './Chat.css'\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Menu from \"../../components/Menu/Menu\"\r\nimport { chat } from '../../http/communicationApi';\r\nimport { useLoaderData, useParams } from 'react-router-dom';\r\nimport { CommunicationContext } from '../../providers/CommunicationProvider';\r\nimport { SERVER_API } from '../../utils/consts';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nconst Chat = observer(() => {\r\n    const {communicationStore} = useContext(CommunicationContext)\r\n    const {userStore} = useContext(UserContext)\r\n    const chatData = useLoaderData()\r\n    let {id} = useParams()\r\n    useEffect(() => {\r\n        async function getChats() {\r\n            communicationStore.setChat(chatData)\r\n        }\r\n        getChats();\r\n        return (() => {\r\n            communicationStore.setChat([])\r\n        })\r\n    },[communicationStore, chatData, id])\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async ()=>{\r\n            try {\r\n                const result = await chat(id)\r\n                communicationStore.setChat(result)\r\n                console.log(communicationStore.chat)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }, 10000)\r\n        return (() => {\r\n            clearInterval(interval)\r\n            communicationStore.setChat([])\r\n        })\r\n        \r\n    },[communicationStore, id])\r\n    return (\r\n        <div className=\"container\">\r\n            <div className = \"section\">\r\n                <Menu/>\r\n                <div className = \"content\"> \r\n                    <div className=\"chat\">\r\n                        <div className=\"chat__header\">\r\n                            <div className=\"chat__header--title\">\r\n                                {/* {communicationStore?.chatList.forEach(element => {\r\n                                    console.log(element.chat.id)\r\n                                })} */}\r\n                            </div>\r\n                            <div className=\"chat__header--nickname\">\r\n                                {/* {'@' + communicationStore?.chat?.companionData?.nickname} */}\r\n                            </div>\r\n                            <img className=\"chat__header--photo\" src={SERVER_API + communicationStore?.chat?.companionData?.photo} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"chat__content\">\r\n                            {\r\n                                communicationStore.chat && communicationStore.chat.map((value, key) =>\r\n                                    <div className={userStore?.userData?.nickname !== communicationStore.chat.companionData.nickname? \"message\" : \"message me\"} key={key}>\r\n                                        <div className=\"message__data\">\r\n                                            <div className=\"message__data--title\">      \r\n                                                {value?.user?.firstname + ' ' + value?.user?.lastname}\r\n                                            </div>\r\n                                            <div className=\"message__data--time\">\r\n                                                {value?.time}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"message__title\">\r\n                                            \r\n                                        </div>\r\n                                        {value.content}\r\n                                        {value.file}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"chat__input\">\r\n                            <div className=\"chat__input--attach\"></div>\r\n                            <input type=\"text\" className=\"chat__input--message\" />\r\n                            <button className=\"chat__input--send\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>        \r\n        </div>\r\n    </div>\r\n    )\r\n})\r\nexport const ChatLoader = async ({params}) => {\r\n    const res = await chat(params.id)\r\n    if (res?.response?.status === 400 || res?.response?.status === 401){\r\n        throw new Response(res?.response?.data?.message, {status: res?.response?.status})\r\n    }\r\n    return res\r\n}\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}