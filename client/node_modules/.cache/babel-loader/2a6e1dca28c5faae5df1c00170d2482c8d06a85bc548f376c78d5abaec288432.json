{"ast":null,"code":"import i18next from'i18next';import Backend from'i18next-http-backend';import LanguageDetector from'i18next-browser-languagedetector';import{initReactI18next}from'react-i18next';let lang=localStorage.getItem(\"i18nextLng\");if(lang===null){lang=\"ru\";}i18next.use(Backend).use(LanguageDetector).use(initReactI18next).init({fallbackLng:lang,debug:true,detection:{order:['queryString','cookie'],cache:['cookie']},interpolation:{escapeValue:false}});export default i18next;","map":{"version":3,"names":["i18next","Backend","LanguageDetector","initReactI18next","lang","localStorage","getItem","use","init","fallbackLng","debug","detection","order","cache","interpolation","escapeValue"],"sources":["C:/Users/ivana/Documents/web/Corp/client/src/i18next/i18next.jsx"],"sourcesContent":["import i18next from 'i18next'\r\nimport Backend from 'i18next-http-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\n\r\nlet lang = localStorage.getItem(\"i18nextLng\")\r\n\r\nif (lang === null) {\r\n    lang = \"ru\"\r\n}\r\ni18next\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: lang,\r\n        debug: true,\r\n        detection:{\r\n            order: ['queryString','cookie'],\r\n            cache: ['cookie']\r\n    },\r\n    interpolation:{\r\n        escapeValue: false\r\n    }\r\n\r\n})\r\nexport default i18next;"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAC7B,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,gBAAgB,KAAM,kCAAkC,CAC/D,OAASC,gBAAgB,KAAQ,eAAe,CAGhD,GAAI,CAAAC,IAAI,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAE7C,GAAIF,IAAI,GAAK,IAAI,CAAE,CACfA,IAAI,CAAG,IAAI,CACf,CACAJ,OAAO,CACFO,GAAG,CAACN,OAAO,CAAC,CACZM,GAAG,CAACL,gBAAgB,CAAC,CACrBK,GAAG,CAACJ,gBAAgB,CAAC,CACrBK,IAAI,CAAC,CACFC,WAAW,CAAEL,IAAI,CACjBM,KAAK,CAAE,IAAI,CACXC,SAAS,CAAC,CACNC,KAAK,CAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAC/BC,KAAK,CAAE,CAAC,QAAQ,CACxB,CAAC,CACDC,aAAa,CAAC,CACVC,WAAW,CAAE,KACjB,CAEJ,CAAC,CAAC,CACF,cAAe,CAAAf,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}