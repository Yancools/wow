{"ast":null,"code":"import axios from \"axios\";\nimport { SERVER_API } from \"../utils/consts\";\nconst $host = axios.create({\n  withCredentials: true,\n  baseURL: SERVER_API\n});\nconst $authhost = axios.create({\n  withCredentials: true,\n  baseURL: SERVER_API\n});\nconst authInterceptor = config => {\n  const token = localStorage.getItem('Token');\n  config.headers.authorization = `Bearer ${token}`;\n  return config;\n};\n$authhost.interceptors.request.use(authInterceptor);\nexport { $host, $authhost };","map":{"version":3,"names":["axios","SERVER_API","$host","create","withCredentials","baseURL","$authhost","authInterceptor","config","token","localStorage","getItem","headers","authorization","interceptors","request","use"],"sources":["C:/Users/ivana/Documents/web/Corp/client/src/http/index.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { SERVER_API } from \"../utils/consts\"\r\nconst $host = axios.create({\r\n    withCredentials: true,\r\n    baseURL: SERVER_API\r\n})\r\n\r\nconst $authhost = axios.create({\r\n    withCredentials: true,\r\n    baseURL: SERVER_API\r\n})\r\n\r\nconst authInterceptor = config => {\r\n    const token = localStorage.getItem('Token')\r\n    config.headers.authorization = `Bearer ${token}`\r\n    return config\r\n}\r\n\r\n$authhost.interceptors.request.use(authInterceptor)\r\n\r\nexport {\r\n    $host,\r\n    $authhost\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,MAAMC,KAAK,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEJ;AACb,CAAC,CAAC;AAEF,MAAMK,SAAS,GAAGN,KAAK,CAACG,MAAM,CAAC;EAC3BC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEJ;AACb,CAAC,CAAC;AAEF,MAAMM,eAAe,GAAGC,MAAM,IAAI;EAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CH,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAChD,OAAOD,MAAM;AACjB,CAAC;AAEDF,SAAS,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;AAEnD,SACIL,KAAK,EACLI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}