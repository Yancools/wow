{"ast":null,"code":"import { CHANGEFIRSTNAME_URL, CHANGEGENDER_URL, CHANGELASTNAME_URL, CHANGEPHOTO_URL, CHANGESTATUS_URL, LOGIN_URL, LOGOUT_URL, REFRESH_URL, REGISTRATION_URL, SEARCHUSER_URL, USERDATA_URL } from \"../utils/consts\";\nimport { $host, $authhost } from \"./index\";\nexport const registration = async (login, password, firstname, lastname, gender) => {\n  const result = await $host.post(REGISTRATION_URL, {\n    login,\n    password,\n    firstname,\n    lastname,\n    gender\n  });\n  localStorage.setItem('Token', result.data);\n  return result;\n};\nexport const login = async (login, password) => {\n  const result = await $host.post(LOGIN_URL, {\n    login,\n    password\n  });\n  localStorage.setItem('Token', result.data);\n  return result;\n};\nexport const logout = async () => {\n  await $authhost.post(LOGOUT_URL);\n  localStorage.removeItem('Token');\n};\nexport const checkAuth = async () => {\n  try {\n    const token = await $host.get(REFRESH_URL);\n    localStorage.setItem('Token', token.data);\n    return token;\n  } catch (error) {\n    localStorage.removeItem('Token');\n  }\n};\nexport const userData = async userNickname => {\n  try {\n    const {\n      result\n    } = await $host.get(USERDATA_URL + userNickname);\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const changeFirstname = async newFirstname => {\n  await $authhost.post(CHANGEFIRSTNAME_URL, {\n    newFirstname\n  });\n};\nexport const changeLastname = async newLastname => {\n  await $authhost.post(CHANGELASTNAME_URL, {\n    newLastname\n  });\n};\nexport const changeGender = async newGender => {\n  await $authhost.post(CHANGEGENDER_URL, {\n    newGender\n  });\n};\nexport const changeStatus = async newStatus => {\n  await $authhost.post(CHANGESTATUS_URL, {\n    newStatus\n  });\n};\nexport const changePhoto = async photo => {\n  await $authhost.post(CHANGEPHOTO_URL, {\n    photo\n  });\n};\nexport const searchUser = async searchUser => {\n  try {\n    const result = await $authhost.post(SEARCHUSER_URL, {\n      searchUser\n    });\n    return result;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    alert((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n  }\n};","map":{"version":3,"names":["CHANGEFIRSTNAME_URL","CHANGEGENDER_URL","CHANGELASTNAME_URL","CHANGEPHOTO_URL","CHANGESTATUS_URL","LOGIN_URL","LOGOUT_URL","REFRESH_URL","REGISTRATION_URL","SEARCHUSER_URL","USERDATA_URL","$host","$authhost","registration","login","password","firstname","lastname","gender","result","post","localStorage","setItem","data","logout","removeItem","checkAuth","token","get","error","userData","userNickname","changeFirstname","newFirstname","changeLastname","newLastname","changeGender","newGender","changeStatus","newStatus","changePhoto","photo","searchUser","_error$response","_error$response$data","alert","response","message"],"sources":["C:/Users/ivana/Documents/web/Corp/client/src/http/userAPI.js"],"sourcesContent":["import { CHANGEFIRSTNAME_URL, CHANGEGENDER_URL, CHANGELASTNAME_URL, CHANGEPHOTO_URL, CHANGESTATUS_URL, LOGIN_URL, LOGOUT_URL, REFRESH_URL, REGISTRATION_URL, SEARCHUSER_URL, USERDATA_URL } from \"../utils/consts\";\r\nimport { $host, $authhost } from \"./index\";\r\n\r\n\r\nexport const registration = async (login, password, firstname, lastname, gender) => {\r\n        const result = await $host.post(REGISTRATION_URL, {login, password, firstname, lastname , gender})\r\n        localStorage.setItem('Token', result.data)\r\n        return result\r\n}\r\nexport const login = async (login, password) => {\r\n    const result = await $host.post(LOGIN_URL, {login, password})\r\n    localStorage.setItem('Token', result.data)\r\n    return result\r\n}\r\nexport const logout = async () => {\r\n    await $authhost.post(LOGOUT_URL)\r\n    localStorage.removeItem('Token')\r\n}\r\nexport const checkAuth = async () =>{\r\n    try {\r\n        const token = await $host.get(REFRESH_URL)\r\n        localStorage.setItem('Token', token.data)\r\n        return token\r\n    } catch (error) {\r\n        localStorage.removeItem('Token')\r\n    }\r\n}\r\nexport const userData = async (userNickname) => {\r\n    try {\r\n        const {result} = await $host.get(USERDATA_URL + userNickname)\r\n        return result\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}\r\nexport const changeFirstname = async (newFirstname) => {\r\n    await $authhost.post(CHANGEFIRSTNAME_URL, {newFirstname})\r\n}\r\nexport const changeLastname = async (newLastname) => {\r\n    await $authhost.post(CHANGELASTNAME_URL, {newLastname})\r\n}\r\nexport const changeGender = async (newGender) => {\r\n    await $authhost.post(CHANGEGENDER_URL, {newGender})\r\n}\r\nexport const changeStatus = async (newStatus) => {\r\n    await $authhost.post(CHANGESTATUS_URL, {newStatus})\r\n}\r\nexport const changePhoto = async (photo) => {\r\n    await $authhost.post(CHANGEPHOTO_URL, {photo})\r\n}\r\nexport const searchUser = async (searchUser) => {\r\n    try {\r\n        const result = await $authhost.post(SEARCHUSER_URL, {searchUser})\r\n        return result\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}