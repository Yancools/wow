{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivana\\\\Documents\\\\web\\\\Corp\\\\client\\\\src\\\\view\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './Profile.css';\nimport React, { useContext, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { userData } from \"../../http/userAPI\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { observer } from \"mobx-react\";\nimport { SERVER_API, USERDATA_URL } from \"../../utils/consts\";\nimport { useParams } from \"react-router-dom\";\nimport Menu from \"../../components/Menu/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    userStore\n  } = useContext(UserContext);\n  const [translation] = useTranslation();\n  const params = useParams();\n\n  // useEffect(() => {\n  //     userData(params.nickname).then(result => {\n  //         userStore.setProfileData(result)\n  //         userStore.setProfileUrl(params.nickname)\n  //         if(result?.response?.status){\n  //             throw new Response('', {status: 400})\n  //         }\n  //     })\n\n  //     return () => {\n  //         userStore.setProfileData({})\n  //         userStore.setProfileUrl({})\n  //     }\n  // }, [userStore, params.nickname])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this)\n  // <div className = \"profile\">\n  //     <Menu/>\n  //         <div className = \"profile__content\"> \n  //         {\n  //             userStore.profileUrl ? \n  //                 <img className=\"profile__content--logo\" src={SERVER_API + userStore.profileData?.photo} alt=\"\"/>\n  //             :\n  //                 <div className=\"profile__content--logo\" />\n  //         }\n  //         <button className=\"profile__content--button\">\n  //             {translation(\"profile.edit\")}\n  //         </button>\n  //         <div className=\"profile__content--name\">\n  //             <p>{userStore.profileData?.firstname}</p>\n  //             <p>{userStore.profileData?.lastname}</p>\n  //         </div>\n  //         <div className=\"profile__content--nickname\">\n  //             {userStore.profileData?.nickname}\n  //         </div>\n  //         <div className=\"profile__content--gender\">\n  //             {userStore.profileData?.gender}\n  //         </div>\n  //         <div className=\"profile__content--status\">\n  //             {userStore.profileData?.status}\n  //         </div>\n  //     </div>        \n  // </div>\n  ;\n}, \"YtMQzpHZZ1xmEVfhQb6cD0LZpkY=\", false, function () {\n  return [useTranslation, useParams];\n})), \"YtMQzpHZZ1xmEVfhQb6cD0LZpkY=\", false, function () {\n  return [useTranslation, useParams];\n});\n_c2 = Profile;\nexport const ProfileLoader = async () => {\n  _s2();\n  const {\n    userStore\n  } = useContext(UserContext);\n  const data = userData(userStore.profileUrl).then(result => {\n    userStore.setProfileData(result);\n    userStore.setProfileUrl(result.nickname);\n  });\n  return console.log(data);\n};\n_s2(ProfileLoader, \"1vbLM4W6cYV7hpt6fa8Gc5EYUsE=\");\n_c3 = ProfileLoader;\nexport default Profile;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Profile$observer\");\n$RefreshReg$(_c2, \"Profile\");\n$RefreshReg$(_c3, \"ProfileLoader\");","map":{"version":3,"names":["React","useContext","useEffect","useTranslation","userData","UserContext","observer","SERVER_API","USERDATA_URL","useParams","Menu","jsxDEV","_jsxDEV","Profile","_s","_c","userStore","translation","params","fileName","_jsxFileName","lineNumber","columnNumber","_c2","ProfileLoader","_s2","data","profileUrl","then","result","setProfileData","setProfileUrl","nickname","console","log","_c3","$RefreshReg$"],"sources":["C:/Users/ivana/Documents/web/Corp/client/src/view/Profile/Profile.jsx"],"sourcesContent":["import './Profile.css'\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { userData } from \"../../http/userAPI\";\r\nimport { UserContext } from \"../../providers/UserProvider\";\r\nimport { observer } from \"mobx-react\";\r\nimport {  SERVER_API, USERDATA_URL } from \"../../utils/consts\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Menu from \"../../components/Menu/Menu\"\r\nconst Profile = observer(() => {\r\n    const {userStore} = useContext(UserContext)\r\n    const [translation] = useTranslation();\r\n    const params = useParams();\r\n\r\n    // useEffect(() => {\r\n    //     userData(params.nickname).then(result => {\r\n    //         userStore.setProfileData(result)\r\n    //         userStore.setProfileUrl(params.nickname)\r\n    //         if(result?.response?.status){\r\n    //             throw new Response('', {status: 400})\r\n    //         }\r\n    //     })\r\n      \r\n    //     return () => {\r\n    //         userStore.setProfileData({})\r\n    //         userStore.setProfileUrl({})\r\n    //     }\r\n    // }, [userStore, params.nickname])\r\n\r\n    return (\r\n        <div></div>\r\n        // <div className = \"profile\">\r\n        //     <Menu/>\r\n        //         <div className = \"profile__content\"> \r\n        //         {\r\n        //             userStore.profileUrl ? \r\n        //                 <img className=\"profile__content--logo\" src={SERVER_API + userStore.profileData?.photo} alt=\"\"/>\r\n        //             :\r\n        //                 <div className=\"profile__content--logo\" />\r\n        //         }\r\n        //         <button className=\"profile__content--button\">\r\n        //             {translation(\"profile.edit\")}\r\n        //         </button>\r\n        //         <div className=\"profile__content--name\">\r\n        //             <p>{userStore.profileData?.firstname}</p>\r\n        //             <p>{userStore.profileData?.lastname}</p>\r\n        //         </div>\r\n        //         <div className=\"profile__content--nickname\">\r\n        //             {userStore.profileData?.nickname}\r\n        //         </div>\r\n        //         <div className=\"profile__content--gender\">\r\n        //             {userStore.profileData?.gender}\r\n        //         </div>\r\n        //         <div className=\"profile__content--status\">\r\n        //             {userStore.profileData?.status}\r\n        //         </div>\r\n        //     </div>        \r\n        // </div>\r\n    )\r\n}\r\n)\r\nexport const ProfileLoader = async () => {\r\n    const {userStore} = useContext(UserContext)\r\n    const data = userData(userStore.profileUrl).then(result => {\r\n        userStore.setProfileData(result)\r\n        userStore.setProfileUrl(result.nickname)\r\n    })\r\n    return console.log(data)\r\n}\r\nexport default Profile;"],"mappings":";;;AAAA,OAAO,eAAe;AACtB,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAAUC,UAAU,EAAEC,YAAY,QAAQ,oBAAoB;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7C,MAAMC,OAAO,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC3B,MAAM;IAACE;EAAS,CAAC,GAAGf,UAAU,CAACI,WAAW,CAAC;EAC3C,MAAM,CAACY,WAAW,CAAC,GAAGd,cAAc,CAAC,CAAC;EACtC,MAAMe,MAAM,GAAGT,SAAS,CAAC,CAAC;;EAE1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACIG,OAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;EAAA,QAhDyBnB,cAAc,EACrBM,SAAS;AAAA,EAgD5B,CAAC;EAAA,QAjDyBN,cAAc,EACrBM,SAAS;AAAA,EAgD3B;AAAAc,GAAA,GAnDKV,OAAO;AAoDb,OAAO,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;EAAAC,GAAA;EACrC,MAAM;IAACT;EAAS,CAAC,GAAGf,UAAU,CAACI,WAAW,CAAC;EAC3C,MAAMqB,IAAI,GAAGtB,QAAQ,CAACY,SAAS,CAACW,UAAU,CAAC,CAACC,IAAI,CAACC,MAAM,IAAI;IACvDb,SAAS,CAACc,cAAc,CAACD,MAAM,CAAC;IAChCb,SAAS,CAACe,aAAa,CAACF,MAAM,CAACG,QAAQ,CAAC;EAC5C,CAAC,CAAC;EACF,OAAOC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;AAC5B,CAAC;AAAAD,GAAA,CAPYD,aAAa;AAAAW,GAAA,GAAbX,aAAa;AAQ1B,eAAeX,OAAO;AAAC,IAAAE,EAAA,EAAAQ,GAAA,EAAAY,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}