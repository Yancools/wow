{"ast":null,"code":"import { CHANGEFIRSTNAME_URL, CHANGEGENDER_URL, CHANGELASTNAME_URL, CHANGEPHOTO_URL, CHANGESTATUS_URL, LOGIN_URL, LOGOUT_URL, REFRESH_URL, REGISTRATION_URL, USERDATA_URL } from \"../utils/consts\";\nimport { $host, $authhost } from \"./index\";\nexport const registration = async (login, password, firstname, lastname) => {\n  try {\n    const token = await $host.post(REGISTRATION_URL, {\n      login,\n      password,\n      firstname,\n      lastname\n    });\n    localStorage.setItem('Token', token.data);\n    return token;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    alert((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n  }\n};\nexport const login = async (login, password) => {\n  try {\n    const token = await $host.post(LOGIN_URL, {\n      login,\n      password\n    });\n    localStorage.setItem('Token', token.data);\n    return token;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    alert((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n  }\n};\nexport const logout = async () => {\n  try {\n    await $host.post(LOGOUT_URL);\n    localStorage.removeItem('Token');\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    alert((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message);\n  }\n};\nexport const checkAuth = async () => {\n  try {\n    const token = await $host.get(REFRESH_URL);\n    localStorage.setItem('Token', token.data);\n    return token;\n  } catch (error) {\n    localStorage.removeItem('Token');\n  }\n};\nexport const userData = async userNickname => {\n  try {\n    const {\n      data\n    } = await $host.get(USERDATA_URL + userNickname);\n    return data;\n  } catch (error) {\n    // alert(error.response?.data?.message)\n  }\n};\nexport const changeFirstname = async newFirstname => {\n  try {\n    await $authhost.post(CHANGEFIRSTNAME_URL, {\n      newFirstname\n    });\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    alert((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message);\n  }\n};\nexport const changeLastname = async newLastname => {\n  try {\n    await $authhost.post(CHANGELASTNAME_URL, {\n      newLastname\n    });\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    alert((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message);\n  }\n};\nexport const changeGender = async newGender => {\n  try {\n    await $authhost.post(CHANGEGENDER_URL, {\n      newGender\n    });\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    alert((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message);\n  }\n};\nexport const changeStatus = async newStatus => {\n  try {\n    await $authhost.post(CHANGESTATUS_URL, {\n      newStatus\n    });\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n    alert((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message);\n  }\n};\nexport const changePhoto = async photo => {\n  try {\n    await $authhost.post(CHANGEPHOTO_URL, photo);\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n    alert((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message);\n  }\n};","map":{"version":3,"names":["CHANGEFIRSTNAME_URL","CHANGEGENDER_URL","CHANGELASTNAME_URL","CHANGEPHOTO_URL","CHANGESTATUS_URL","LOGIN_URL","LOGOUT_URL","REFRESH_URL","REGISTRATION_URL","USERDATA_URL","$host","$authhost","registration","login","password","firstname","lastname","token","post","localStorage","setItem","data","error","_error$response","_error$response$data","alert","response","message","_error$response2","_error$response2$data","logout","removeItem","_error$response3","_error$response3$data","checkAuth","get","userData","userNickname","changeFirstname","newFirstname","_error$response4","_error$response4$data","changeLastname","newLastname","_error$response5","_error$response5$data","changeGender","newGender","_error$response6","_error$response6$data","changeStatus","newStatus","_error$response7","_error$response7$data","changePhoto","photo","_error$response8","_error$response8$data"],"sources":["C:/Users/ivana/Documents/web/Corp/client/src/http/userAPI.js"],"sourcesContent":["import { CHANGEFIRSTNAME_URL, CHANGEGENDER_URL, CHANGELASTNAME_URL, CHANGEPHOTO_URL, CHANGESTATUS_URL, LOGIN_URL, LOGOUT_URL, REFRESH_URL, REGISTRATION_URL, USERDATA_URL } from \"../utils/consts\";\r\nimport { $host, $authhost } from \"./index\";\r\nexport const registration = async (login, password, firstname, lastname) => {\r\n    try {\r\n        const token = await $host.post(REGISTRATION_URL, {login, password, firstname, lastname})\r\n        localStorage.setItem('Token', token.data)\r\n        return token\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const login = async (login, password) => {\r\n    try {\r\n        const token = await $host.post(LOGIN_URL, {login, password})\r\n        localStorage.setItem('Token', token.data)\r\n        return token\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const logout = async () => {\r\n    try {\r\n        await $host.post(LOGOUT_URL)\r\n        localStorage.removeItem('Token')\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const checkAuth = async () =>{\r\n    try {\r\n        const token = await $host.get(REFRESH_URL)\r\n        localStorage.setItem('Token', token.data)\r\n        return token\r\n    } catch (error) {\r\n        localStorage.removeItem('Token')\r\n    }\r\n}\r\nexport const userData = async (userNickname) => {\r\n    try {\r\n        const {data} = await $host.get(USERDATA_URL + userNickname)\r\n        return data\r\n    } catch (error) {\r\n        // alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const changeFirstname = async (newFirstname) => {\r\n    try {\r\n        await $authhost.post(CHANGEFIRSTNAME_URL, {newFirstname})\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const changeLastname = async (newLastname) => {\r\n    try {\r\n        await $authhost.post(CHANGELASTNAME_URL, {newLastname})\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const changeGender = async (newGender) => {\r\n    try {\r\n        await $authhost.post(CHANGEGENDER_URL, {newGender})\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const changeStatus = async (newStatus) => {\r\n    try {\r\n        await $authhost.post(CHANGESTATUS_URL, {newStatus})\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\nexport const changePhoto = async (photo) => {\r\n    try {\r\n        await $authhost.post(CHANGEPHOTO_URL, photo)\r\n    } catch (error) {\r\n        alert(error.response?.data?.message)\r\n    }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}