{"ast":null,"code":"import axios from\"axios\";import{SERVER_API}from\"../utils/consts\";const $host=axios.create({withCredentials:true,baseURL:SERVER_API});const $authhost=axios.create({withCredentials:true,baseURL:SERVER_API});const authInterceptor=config=>{const token=localStorage.getItem('Token');config.headers.authorization=\"Bearer \".concat(token);return config;};$authhost.interceptors.request.use(authInterceptor);export{$host,$authhost};","map":{"version":3,"names":["axios","SERVER_API","$host","create","withCredentials","baseURL","$authhost","authInterceptor","config","token","localStorage","getItem","headers","authorization","concat","interceptors","request","use"],"sources":["C:/Users/ivana/Documents/web/Corp/client/src/http/index.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { SERVER_API } from \"../utils/consts\"\r\nconst $host = axios.create({\r\n    withCredentials: true,\r\n    baseURL: SERVER_API\r\n})\r\n\r\nconst $authhost = axios.create({\r\n    withCredentials: true,\r\n    baseURL: SERVER_API\r\n})\r\n\r\nconst authInterceptor = config => {\r\n    const token = localStorage.getItem('Token')\r\n    config.headers.authorization = `Bearer ${token}`\r\n    return config\r\n}\r\n\r\n$authhost.interceptors.request.use(authInterceptor)\r\n\r\nexport {\r\n    $host,\r\n    $authhost\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,iBAAiB,CAC5C,KAAM,CAAAC,KAAK,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,eAAe,CAAE,IAAI,CACrBC,OAAO,CAAEJ,UACb,CAAC,CAAC,CAEF,KAAM,CAAAK,SAAS,CAAGN,KAAK,CAACG,MAAM,CAAC,CAC3BC,eAAe,CAAE,IAAI,CACrBC,OAAO,CAAEJ,UACb,CAAC,CAAC,CAEF,KAAM,CAAAM,eAAe,CAAGC,MAAM,EAAI,CAC9B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3CH,MAAM,CAACI,OAAO,CAACC,aAAa,WAAAC,MAAA,CAAaL,KAAK,CAAE,CAChD,MAAO,CAAAD,MAAM,CACjB,CAAC,CAEDF,SAAS,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAACV,eAAe,CAAC,CAEnD,OACIL,KAAK,CACLI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}