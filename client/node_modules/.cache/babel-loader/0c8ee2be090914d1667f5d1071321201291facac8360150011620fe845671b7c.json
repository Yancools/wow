{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivana\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\Corp\\\\client\\\\src\\\\components\\\\Switch\\\\Switch.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Switch.css';\nimport { useState } from \"react\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Switch = props => {\n  _s();\n  const {\n    setTheme\n  } = useTheme();\n  let storageLangActive = localStorage.getItem(\"i18nextLng\");\n  let storageThemeActive = localStorage.getItem(\"Theme\");\n  if (storageLangActive === \"ru\" || storageLangActive === null) {\n    storageLangActive = false;\n  } else if (storageLangActive === \"en\") {\n    storageLangActive = true;\n  }\n  if (storageThemeActive === \"Light\" || storageThemeActive === null) {\n    storageThemeActive = false;\n  } else if (storageThemeActive === \"Dark\") {\n    storageThemeActive = true;\n  }\n  const [activeLang, setActiveLang] = useState(storageLangActive);\n  const [activeTheme, setActiveTheme] = useState(storageThemeActive);\n  const switchLanguage = (activeLang, setActiveLang) => {\n    setActiveLang(!activeLang);\n    localStorage.setItem(\"storageLangActive\", !activeLang);\n    if (activeLang) {\n      props.changeLanguage(\"ru\");\n    } else if (!activeLang) {\n      props.changeLanguage(\"en\");\n    }\n  };\n  const switchTheme = (activeTheme, setActiveTheme) => {\n    setActiveTheme(!activeTheme);\n    localStorage.setItem(\"storageThemeActive\", !activeTheme);\n    if (activeTheme) {\n      setTheme(\"Light\");\n      localStorage.setItem(\"Theme\", \"Light\");\n    } else if (!activeTheme) {\n      setTheme(\"Dark\");\n      localStorage.setItem(\"Theme\", \"Dark\");\n    }\n  };\n  if (props.data.id === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: activeLang ? \"switch-btn switch-on\" : \"switch-btn\",\n      onClick: () => {\n        switchLanguage(activeLang, setActiveLang);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this);\n  } else if (props.data.id === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: activeTheme ? \"switch-btn switch-on\" : \"switch-btn\",\n      onClick: () => {\n        switchTheme(activeTheme, setActiveTheme);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(Switch, \"elX6cTVE3mmbzThp33QhY4tntc4=\", false, function () {\n  return [useTheme];\n});\n_c = Switch;\nexport default Switch;\nvar _c;\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"names":["React","useState","useTheme","jsxDEV","_jsxDEV","Switch","props","_s","setTheme","storageLangActive","localStorage","getItem","storageThemeActive","activeLang","setActiveLang","activeTheme","setActiveTheme","switchLanguage","setItem","changeLanguage","switchTheme","data","id","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ivana/OneDrive/Документы/Corp/client/src/components/Switch/Switch.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './Switch.css'\r\nimport { useState } from \"react\";\r\nimport useTheme from \"../../hooks/useTheme\";\r\n\r\nconst Switch = (\r\n    props\r\n    ) => {  \r\n        const {setTheme} = useTheme()\r\n\r\n        let storageLangActive = localStorage.getItem(\"i18nextLng\")\r\n        let storageThemeActive = localStorage.getItem(\"Theme\")\r\n        if (storageLangActive === \"ru\" || storageLangActive === null){\r\n            storageLangActive = false\r\n        } else if(storageLangActive === \"en\") {\r\n            storageLangActive = true\r\n        }\r\n\r\n        if (storageThemeActive === \"Light\" || storageThemeActive === null){\r\n            storageThemeActive = false\r\n        } else if(storageThemeActive === \"Dark\") {\r\n            storageThemeActive = true\r\n        }\r\n        const [activeLang, setActiveLang] = useState(storageLangActive)\r\n        const [activeTheme, setActiveTheme] = useState(storageThemeActive)\r\n        const switchLanguage = (activeLang, setActiveLang) => {\r\n            setActiveLang(!activeLang);\r\n            localStorage.setItem(\"storageLangActive\", !activeLang)\r\n            if (activeLang) {\r\n                props.changeLanguage(\"ru\")\r\n            } else if (!activeLang) {\r\n                props.changeLanguage(\"en\")\r\n            }\r\n        }\r\n\r\n        const switchTheme = (activeTheme, setActiveTheme) => {\r\n            setActiveTheme(!activeTheme);\r\n            localStorage.setItem(\"storageThemeActive\", !activeTheme)\r\n            if (activeTheme) {\r\n                setTheme(\"Light\")\r\n                localStorage.setItem(\"Theme\", \"Light\")\r\n            } else if (!activeTheme) {\r\n                setTheme(\"Dark\")\r\n                localStorage.setItem(\"Theme\", \"Dark\")\r\n            }\r\n        }\r\n         \r\n\r\n        if (props.data.id === 1) {\r\n            return (\r\n                <div className = { activeLang ? \"switch-btn switch-on\" : \"switch-btn\"} onClick={ () => { switchLanguage(activeLang, setActiveLang)}}></div>\r\n            )     \r\n        } else if ( props.data.id === 2) {\r\n            return (\r\n                <div className = { activeTheme ? \"switch-btn switch-on\" : \"switch-btn\"} onClick={ () => { switchTheme(activeTheme, setActiveTheme)}}></div>\r\n            )\r\n        } \r\n}\r\n\r\nexport default Switch"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}